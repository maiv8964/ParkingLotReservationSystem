/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 29 23:24:41 GMT 2023
 */

package reservations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import parking.ParkingSpace;
import reservations.Reservation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Reservation_ESTest extends Reservation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 1, 0, "", parkingSpace0);
      int int0 = reservation0.getStartTime();
      assertEquals(0, int0);
      assertEquals(0, reservation0.getDuration());
      assertEquals(1, reservation0.getDay());
      assertEquals(0, reservation0.getMonth());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(1533);
      Reservation reservation0 = new Reservation(1, 1, 501, 1, "", parkingSpace0);
      int int0 = reservation0.getStartTime();
      assertEquals(1, reservation0.getMonth());
      assertEquals(1, int0);
      assertEquals(501, reservation0.getDay());
      assertEquals(1, reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 0, 0, "6hN/Zp`?Bo;", parkingSpace0);
      parkingSpace0.setEnabled(false);
      reservation0.getSpace();
      assertEquals(0, reservation0.getDay());
      assertEquals(0, reservation0.getMonth());
      assertEquals(0, reservation0.getStartTime());
      assertEquals(0, reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 0, 0, "6hN/Zp`?Bo;", parkingSpace0);
      reservation0.getSpace();
      assertEquals(0, reservation0.getMonth());
      assertEquals(0, reservation0.getStartTime());
      assertEquals(0, reservation0.getDay());
      assertEquals(0, reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(681);
      Reservation reservation0 = new Reservation(681, 681, 1, 1, "parkingState.Enabled", parkingSpace0);
      reservation0.getSpace();
      assertEquals(1, reservation0.getDay());
      assertEquals(681, reservation0.getDuration());
      assertEquals(681, reservation0.getMonth());
      assertEquals(1, reservation0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(1533);
      Reservation reservation0 = new Reservation(1, 1, 501, 1, "", parkingSpace0);
      parkingSpace0.setId((-42));
      reservation0.getSpace();
      assertEquals(501, reservation0.getDay());
      assertEquals(1, reservation0.getStartTime());
      assertEquals(1, reservation0.getDuration());
      assertEquals(1, reservation0.getMonth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace((-1));
      Reservation reservation0 = new Reservation((-1412), (-1412), (-1412), 4002, (String) null, parkingSpace0);
      reservation0.getPlate();
      assertEquals((-1412), reservation0.getMonth());
      assertEquals(4002, reservation0.getStartTime());
      assertEquals((-1412), reservation0.getDay());
      assertEquals((-1412), reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 1, 0, "", parkingSpace0);
      reservation0.getPlate();
      assertEquals(0, reservation0.getMonth());
      assertEquals(0, reservation0.getStartTime());
      assertEquals(0, reservation0.getDuration());
      assertEquals(1, reservation0.getDay());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(1, 1, (-1), 1, "~`GX6& 5Zh^I2S`}#", parkingSpace0);
      int int0 = reservation0.getMonth();
      assertEquals(1, reservation0.getStartTime());
      assertEquals(1, int0);
      assertEquals(1, reservation0.getDuration());
      assertEquals((-1), reservation0.getDay());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace((-1));
      Reservation reservation0 = new Reservation((-1412), (-1412), (-1412), 4002, (String) null, parkingSpace0);
      int int0 = reservation0.getMonth();
      assertEquals((-1412), reservation0.getDay());
      assertEquals((-1412), int0);
      assertEquals(4002, reservation0.getStartTime());
      assertEquals((-1412), reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      reservation0.updateDuration(1938);
      int int0 = reservation0.getDuration();
      assertEquals(1938, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation((-1025), (-2790), 0, (-1025), "|*?j2;F+Vc", parkingSpace0);
      int int0 = reservation0.getDuration();
      assertEquals((-2790), reservation0.getMonth());
      assertEquals((-1025), int0);
      assertEquals(0, reservation0.getDay());
      assertEquals((-1025), reservation0.getStartTime());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 1, 0, "", parkingSpace0);
      int int0 = reservation0.getDay();
      assertEquals(0, reservation0.getDuration());
      assertEquals(0, reservation0.getStartTime());
      assertEquals(1, int0);
      assertEquals(0, reservation0.getMonth());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(1, 1, (-1), 1, "~`GX6& 5Zh^I2S`}#", parkingSpace0);
      int int0 = reservation0.getDay();
      assertEquals(1, reservation0.getStartTime());
      assertEquals(1, reservation0.getDuration());
      assertEquals(1, reservation0.getMonth());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParkingSpace parkingSpace0 = new ParkingSpace(0);
      Reservation reservation0 = new Reservation(0, 0, 0, 0, "6hN/Zp`?Bo;", parkingSpace0);
      int int0 = reservation0.getDay();
      assertEquals(0, reservation0.getMonth());
      assertEquals(0, reservation0.getStartTime());
      assertEquals(0, reservation0.getDuration());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      reservation0.getPlate();
      assertEquals(0, reservation0.getDuration());
      assertEquals((-1106), reservation0.getStartTime());
      assertEquals(0, reservation0.getDay());
      assertEquals(0, reservation0.getMonth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      int int0 = reservation0.getStartTime();
      assertEquals(0, reservation0.getDuration());
      assertEquals(0, reservation0.getDay());
      assertEquals(0, reservation0.getMonth());
      assertEquals((-1106), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      reservation0.getSpace();
      assertEquals(0, reservation0.getDay());
      assertEquals(0, reservation0.getMonth());
      assertEquals((-1106), reservation0.getStartTime());
      assertEquals(0, reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      int int0 = reservation0.getMonth();
      assertEquals(0, reservation0.getDay());
      assertEquals(0, int0);
      assertEquals((-1106), reservation0.getStartTime());
      assertEquals(0, reservation0.getDuration());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Reservation reservation0 = new Reservation(0, 0, 0, (-1106), "parkingState.Unoccupied", (ParkingSpace) null);
      int int0 = reservation0.getDuration();
      assertEquals(0, int0);
      assertEquals(0, reservation0.getMonth());
      assertEquals((-1106), reservation0.getStartTime());
      assertEquals(0, reservation0.getDay());
  }
}
