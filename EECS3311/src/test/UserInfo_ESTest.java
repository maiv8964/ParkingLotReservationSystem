/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 29 23:29:44 GMT 2023
 */

package users;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import paymentStrategy.PaymentInfo;
import users.FacultyMember;
import users.NonFacultyStaff;
import users.Student;
import users.Visitor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserInfo_ESTest extends UserInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Visitor visitor0 = new Visitor("users.UserInfo", "&[l^jpqT8");
      PaymentInfo paymentInfo0 = new PaymentInfo(579, 579, "", "", 2731);
      visitor0.setPaymentInfo(paymentInfo0);
      visitor0.getPaymentInfo();
      assertEquals("&[l^jpqT8", visitor0.getPassword());
      assertTrue(visitor0.getIsValid());
      assertEquals("users.UserInfo", visitor0.getEmail());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FacultyMember facultyMember0 = new FacultyMember(" y`w,sW", "x");
      PaymentInfo paymentInfo0 = new PaymentInfo((-1), (-1), (String) null, "users.UserInfo", (-1));
      facultyMember0.setPaymentInfo(paymentInfo0);
      facultyMember0.getPaymentInfo();
      assertFalse(facultyMember0.getIsValid());
      assertEquals(" y`w,sW", facultyMember0.getEmail());
      assertEquals("x", facultyMember0.getPassword());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NonFacultyStaff nonFacultyStaff0 = new NonFacultyStaff("", (String) null);
      PaymentInfo paymentInfo0 = new PaymentInfo(0, 1, "'yH00b3%v|u_w%5", (String) null, 0);
      nonFacultyStaff0.setPaymentInfo(paymentInfo0);
      nonFacultyStaff0.getPaymentInfo();
      assertFalse(nonFacultyStaff0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NonFacultyStaff nonFacultyStaff0 = new NonFacultyStaff("1;mD3(", "1;mD3(");
      PaymentInfo paymentInfo0 = new PaymentInfo(0, 0, (String) null, "1;mD3(", 126);
      nonFacultyStaff0.setPaymentInfo(paymentInfo0);
      paymentInfo0.setCardBallance(425.401124807);
      nonFacultyStaff0.getPaymentInfo();
      assertFalse(nonFacultyStaff0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Student student0 = new Student((String) null, (String) null);
      student0.getPassword();
      assertFalse(student0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FacultyMember facultyMember0 = new FacultyMember("2*_'4t", "");
      String string0 = facultyMember0.getPassword();
      assertEquals("2*_'4t", facultyMember0.getEmail());
      assertNotNull(string0);
      assertEquals("", string0);
      assertFalse(facultyMember0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Visitor visitor0 = new Visitor("", ";Z|r");
      visitor0.getParkingRate();
      assertEquals("", visitor0.getEmail());
      assertEquals(";Z|r", visitor0.getPassword());
      assertTrue(visitor0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Visitor visitor0 = new Visitor("parkingState.Disabled", "XE");
      boolean boolean0 = visitor0.getIsValid();
      assertEquals("parkingState.Disabled", visitor0.getEmail());
      assertTrue(boolean0);
      assertEquals("XE", visitor0.getPassword());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Student student0 = new Student((String) null, (String) null);
      student0.getEmail();
      assertFalse(student0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Student student0 = new Student("", "");
      String string0 = student0.getEmail();
      assertNotNull(string0);
      assertFalse(student0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NonFacultyStaff nonFacultyStaff0 = new NonFacultyStaff("1;mD3(", "1;mD3(");
      assertFalse(nonFacultyStaff0.getIsValid());
      
      nonFacultyStaff0.setValid();
      assertTrue(nonFacultyStaff0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Student student0 = new Student("", (String) null);
      boolean boolean0 = student0.getIsValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NonFacultyStaff nonFacultyStaff0 = new NonFacultyStaff("1;mD3(", "1;mD3(");
      PaymentInfo paymentInfo0 = new PaymentInfo(0, 0, (String) null, "1;mD3(", 126);
      nonFacultyStaff0.setPaymentInfo(paymentInfo0);
      paymentInfo0.setCardBallance((-3119));
      nonFacultyStaff0.getPaymentInfo();
      assertFalse(nonFacultyStaff0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NonFacultyStaff nonFacultyStaff0 = new NonFacultyStaff("1;mD3(", "1;mD3(");
      String string0 = nonFacultyStaff0.getEmail();
      assertFalse(nonFacultyStaff0.getIsValid());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FacultyMember facultyMember0 = new FacultyMember("use.'rs.Visitor", "use.'rs.Visitor");
      facultyMember0.getPaymentInfo();
      assertFalse(facultyMember0.getIsValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FacultyMember facultyMember0 = new FacultyMember("bYmy3&~iA'X8(", "bYmy3&~iA'X8(");
      String string0 = facultyMember0.getPassword();
      assertNotNull(string0);
      assertFalse(facultyMember0.getIsValid());
  }
}
