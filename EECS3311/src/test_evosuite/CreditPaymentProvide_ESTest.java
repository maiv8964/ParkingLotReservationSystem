/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 29 23:23:55 GMT 2023
 */

package test_evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import paymentStrategy.CreditPaymentProvide;
import paymentStrategy.PaymentInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreditPaymentProvide_ESTest extends CreditPaymentProvide_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(1526, (-353), "U$jx|G:Uf", "U$jx|G:Uf", 0);
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, (-592.5));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(0, 0, "7#b;kj6", (String) null, 0);
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      // Undeclared exception!
      try { 
        creditPaymentProvide0.handlePayment((PaymentInfo) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("paymentStrategy.CreditPaymentProvide", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(1, 1, "q)", "5H):v1f*Vj;Q", 1);
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(1907, (-1), "w9p=8.&7aP$", (String) null, (-1));
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 1898);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(392, 0, (String) null, (String) null, 392);
      paymentInfo0.setExpDate(392);
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 1.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(392, 0, (String) null, (String) null, 392);
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 392);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo(1, (-1), ",!W4* 4nOW", ",!W4* 4nOW", (-1));
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CreditPaymentProvide creditPaymentProvide0 = new CreditPaymentProvide();
      PaymentInfo paymentInfo0 = new PaymentInfo((-1), (-1), "Payment success.", "Mq9w s#SpX~<YS C", (-1));
      boolean boolean0 = creditPaymentProvide0.handlePayment(paymentInfo0, 3177.748881855745);
      assertFalse(boolean0);
  }
}
