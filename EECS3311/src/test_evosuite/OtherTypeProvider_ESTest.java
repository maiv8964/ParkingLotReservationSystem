/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 29 23:24:29 GMT 2023
 */

package test_evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import paymentStrategy.OtherTypeProvider;
import paymentStrategy.PaymentInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OtherTypeProvider_ESTest extends OtherTypeProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(34, 34, "", "", (-1));
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, 2287.976214023);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(1297, (-1), "", "Processing payment using Other Type payment method...", 1297);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, (-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo((-1), 1297, "paymentStrategy.PaymentInfo", "|Rv lLB*", (-1));
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, 1297);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      // Undeclared exception!
      try { 
        otherTypeProvider0.handlePayment((PaymentInfo) null, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("paymentStrategy.OtherTypeProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(1075, 1075, "paymentStrategy.PaymentInfo", (String) null, 1);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, (-1154.31853378));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(1598, 833, (String) null, "KF4k", 1598);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(1310, 0, "v", "v", 1);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(147, 147, "7:u&~rJpJ/>", "7:u&~rJpJ/>", 0);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, 147);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OtherTypeProvider otherTypeProvider0 = new OtherTypeProvider();
      PaymentInfo paymentInfo0 = new PaymentInfo(0, (-1102), "l%t];K<IET+{|", "l%t];K<IET+{|", 0);
      boolean boolean0 = otherTypeProvider0.handlePayment(paymentInfo0, (-1102));
      assertFalse(boolean0);
  }
}
